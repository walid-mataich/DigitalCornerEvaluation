spring.application.name=evaluation-app

# ===============================
# ========== DATABASE ===========
# ===============================

# URL de connexion à la base de données MySQL.
# createDatabaseIfNotExist=true permet de créer la base si elle n'existe pas.
spring.datasource.url=jdbc:mysql://localhost:3306/evaluationOcp?createDatabaseIfNotExist=true
spring.datasource.username=root
# Mot de passe associé à l'utilisateur MySQL. (Ici, vide : à éviter en production !)
spring.datasource.password=

# ===============================
# ========= HIBERNATE ===========
# ===============================
# Définit la stratégie de mise à jour automatique du schéma de la base.
# "update" modifie la structure existante pour correspondre aux entités Java.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# ===============================
# ============ MAIL ============
# ===============================
#config du serveur smtp de gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=j75611986@gmail.com
spring.mail.password=frnegrdpsnhjvpfg
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Veuillez ne pas inclure d'informations sensibles (comme les mots de passe) directement dans ce fichier.
# Il est fortement recommandé d'utiliser un fichier séparé tel que `.env` ou `application-secret.properties`,
# ou encore des variables d?environnement, pour garantir la sécurité de vos identifiants et données sensibles.
# Cela permet d'éviter les risques liés à la fuite d'informations dans un dépôt Git ou lors d'un déploiement.